name: Checkmarx SAST Scan & AccuKnox Integration

on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]
    
  # Triggers the workflow on pull request events targeted at the master branch
  pull_request:
    branches: [ master ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run-checkmarx-scan:
    name: 1. Run Checkmarx SAST Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Checkmarx One Scan
        # This is the official Checkmarx action to initiate a scan
        uses: Checkmarx/ast-github-action@2.0.23
        with:
          # --- Required Secrets ---
          # Your Checkmarx server URL (e.g., https://eu.checkmarx.net)
          base_uri: ${{ secrets.CX_BASE_URI }}
          # Your Checkmarx API Key (from your .env file)
          apikey: ${{ secrets.CX_API_KEY }}
          
          # --- Scan Configuration ---
          # Uses the repository name (e.g., "Udit/my-project")
          project_name: ${{ github.repository }}
          # Uses the current branch name (e.g., "main" or "feature-branch")
          branch_name: ${{ github.ref_name }}
          scan_types: "sast"
          
          # --- Critical Parameter ---
          # This tells the action to wait for the scan to finish before completing.
          # This is necessary so the next job has results to pull.
          additional_parameters: --wait

  upload-results-to-accuknox:
    name: 2. Upload Results to AccuKnox
    runs-on: ubuntu-latest
    # This job will only run after 'run-checkmarx-scan' has succeeded
    needs: [run-checkmarx-scan] 
    
    steps:
      - name: Pull Results & Upload to AccuKnox
        run: |
          echo "Fetching results for project ${{ github.repository }} on branch ${{ github.ref_name }}"
          
          # Remove any old reports from the runner
          rm -f Checkmarx-*.json
          
          # Run the Docker job you provided
          # It passes all secrets as environment variables
          docker run --rm -it \
            -e CX_API_KEY='${{ secrets.CX_API_KEY }}' \
            -e CX_PROJECT='{"${{ github.repository }}":"${{ github.ref_name }}"}' \
            -e CX_PRIMARY_BRANCH='false' \
            -e AK_ENDPOINT='${{ secrets.AK_ENDPOINT }}' \
            -e AK_LABEL='${{ secrets.AK_LABEL }}' \
            -e AK_TENANT_ID='${{ secrets.AK_TENANT_ID }}' \
            -e AK_TOKEN='${{ secrets.AK_TOKEN }}' \
            -v $PWD:/app/data/ \
            accuknox/checkmarx-one-job:1.4
            
      - name: List Generated Reports (Optional)
        run: |
          echo "Generated report files:"
          ls -l Checkmarx-*.json
